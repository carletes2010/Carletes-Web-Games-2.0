const CACHE_NAME="angrybird-chrome-cache-v2",JSON_URL="./ab-cache.json",broadcast=new BroadcastChannel("sw-update-channel");self.addEventListener("install",a=>{a.waitUntil((async()=>{try{broadcast.postMessage({type:"progress",payload:"Caching game assets..."});const a=await caches.open(CACHE_NAME),e=await fetch(JSON_URL),t=await e.json(),s=t.length;let c=0;for(const e of t){await a.add(e),c++;const t=Math.round(c/s*100);broadcast.postMessage({type:"progress",payload:`Caching assets: ${t}%`})}await self.skipWaiting(),broadcast.postMessage({type:"success",payload:"Cache complete!"})}catch(a){broadcast.postMessage({type:"error",payload:`Installation failed: ${a.message}`}),console.error("Installation failed:",a)}})())}),self.addEventListener("activate",a=>{const e="angrybird-chrome-cache";a.waitUntil((async()=>{try{const a=await caches.keys();await Promise.all(a.map(a=>{if(a.startsWith(e)&&a!==CACHE_NAME)return console.log("Deleting old cache:",a),caches.delete(a)})),await self.clients.claim()}catch(a){console.error("Activation failed:",a)}})())}),self.addEventListener("fetch",a=>{const e=a.request.url;e.includes("google-analytics.com")||e.includes("googletagmanager.com")||e.includes("ads.")||!a.request.url.startsWith(self.location.origin)||a.respondWith((async()=>{try{const e=await caches.match(a.request);if(e)return e;const t=await fetch(a.request);if(t&&"GET"===t.method&&200===t.status&&a.request.url.startsWith(self.location.origin)){const e=await caches.open(CACHE_NAME);e.put(a.request,t.clone())}return t}catch(a){throw console.error("Fetch failed:",a),a}})())});